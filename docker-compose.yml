services:
  postgres-insight:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: insight_user
      POSTGRES_PASSWORD: insight_pass
      POSTGRES_DB: insight_db
    ports:
      - "5434:5432"
    volumes:
      - insight_postgres_data:/var/lib/postgresql/data
    networks:
      - farlo-net

  postgres-history:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_DB: history_db
      POSTGRES_USER: history_user
      POSTGRES_PASSWORD: history_pass
    ports:
      - "5435:5432"
    volumes:
      - history_postgres_data:/var/lib/postgresql/data
    networks:
      - farlo-net

  postgres-culture:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: culture_db
      POSTGRES_USER: culture_user
      POSTGRES_PASSWORD: culture_pass
    ports:
      - "5436:5432"
    volumes:
      - pgdata_culture:/var/lib/postgresql/data
    networks:
      - farlo-net

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - farlo-net

  geodataservice:
    build:
      context: .
      dockerfile: Services/Farlo.GeoDataService/Farlo.GeoData.API/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "5001:8080"
    restart: on-failure
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    networks:
      - farlo-net

  aiservice:
    build:
      context: .
      dockerfile: Services/Farlo.AIService/Farlo.AI.API/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "5002:8080"
    restart: on-failure
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      OPENAI__APIKEY: ${OPENAI__APIKEY}
      OPENAI__MODEL: ${OPENAI__MODEL}
    networks:
      - farlo-net

  insightservice:
    build:
      context: .
      dockerfile: Services/Farlo.InsightService/Farlo.Insight.API/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres-insight:
        condition: service_started
    ports:
      - "5003:8080"
    restart: on-failure
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: Host=postgres-insight;Port=5432;Database=insight_db;Username=insight_user;Password=insight_pass
    networks:
      - farlo-net

  historyservice:
    build:
      context: .
      dockerfile: Services/Farlo.HistoryService/Farlo.History.API/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres-history:
        condition: service_started
    ports:
      - "5004:8080"
    restart: on-failure
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: Host=postgres-history;Port=5432;Database=history_db;Username=history_user;Password=history_pass
    networks:
      - farlo-net

  cultureservice:
    build:
      context: .
      dockerfile: Services/Farlo.CultureService/Farlo.Culture.API/Dockerfile
    depends_on:
      - rabbitmq
      - postgres-culture
    ports:
      - "5005:8080"
    restart: on-failure
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: Host=postgres-culture;Port=5432;Database=culture_db;Username=culture_user;Password=culture_pass
    networks:
      - farlo-net

  frontend:
    build:
      context: ./Farlo.Frontend
      dockerfile: Dockerfile
    ports:
      - "3000:8080"
    restart: always
    networks:
      - farlo-net

networks:
  farlo-net:
    driver: bridge

volumes:
  insight_postgres_data:
  history_postgres_data:
  pgdata_culture:
